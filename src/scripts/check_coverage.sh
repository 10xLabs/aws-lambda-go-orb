# shellcheck disable=SC2148

echo "=== Starting coverage check ==="
echo "Current directory: $(pwd)"
echo "MINIMUM_COVERAGE environment variable: $MINIMUM_COVERAGE"

# Use the coverage profile generated by the test run to get accurate total coverage
if [ ! -f "cover.out" ]; then
    echo "Error: cover.out file not found. Make sure tests were run with -coverprofile=cover.out"
    echo "Contents of current directory:"
    ls -la
    exit 1
fi

echo "Coverage file found, analyzing..."
echo "Coverage file contents (first 10 lines):"
head -10 cover.out

CURRENT_COVERAGE=$(go tool cover -func=cover.out | grep "total:" | awk '{print $3}' | sed 's/%//')
echo "Raw coverage output: $(go tool cover -func=cover.out | grep "total:")"
echo "Extracted coverage: $CURRENT_COVERAGE"

MINIMUM_COVERAGE_FLOAT=${MINIMUM_COVERAGE}

echo "CURRENT: ${CURRENT_COVERAGE}% - MINIMUM: ${MINIMUM_COVERAGE_FLOAT}%"

# Convert to integers by multiplying by 100 for comparison (avoids floating point issues)
CURRENT_COVERAGE_INT=$(echo "${CURRENT_COVERAGE} * 100" | awk '{printf "%.0f", $1}')
MINIMUM_COVERAGE_INT=$(echo "${MINIMUM_COVERAGE_FLOAT} * 100" | awk '{printf "%.0f", $1}')

echo "Coverage comparison: $CURRENT_COVERAGE_INT vs $MINIMUM_COVERAGE_INT (as integers)"

if [ "$CURRENT_COVERAGE_INT" -lt "$MINIMUM_COVERAGE_INT" ]; then
    echo "Coverage ${CURRENT_COVERAGE}% is below minimum required ${MINIMUM_COVERAGE_FLOAT}%"
    exit 1
else
    echo "Coverage ${CURRENT_COVERAGE}% meets minimum requirement of ${MINIMUM_COVERAGE_FLOAT}%"
fi

echo "=== Coverage check completed successfully ==="
